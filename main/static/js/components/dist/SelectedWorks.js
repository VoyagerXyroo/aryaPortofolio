"use strict";
exports.__esModule = true;
var Link_1 = require("./Link");
var framer_motion_1 = require("framer-motion");
var react_1 = require("react");
var SelectedWorks = function () {
    var _a = react_1.useState(false), isHovered1 = _a[0], setIsHovered1 = _a[1];
    var _b = react_1.useState(false), isHovered2 = _b[0], setIsHovered2 = _b[1];
    var _c = react_1.useState(false), isHovered3 = _c[0], setIsHovered3 = _c[1];
    var _d = react_1.useState(false), isHovered4 = _d[0], setIsHovered4 = _d[1];
    var _e = react_1.useState(false), isHovered5 = _e[0], setIsHovered5 = _e[1];
    var disableAnimations = window.innerWidth < 801;
    var disableVideos = window.innerWidth < 501;
    return (React.createElement("div", { id: 'selected-works', className: 'uppercase' },
        React.createElement("div", { className: 'container' },
            React.createElement("p", { id: 'title', className: 'text-right' }, "+ Selected works"),
            React.createElement("div", { id: 'works-grid' },
                React.createElement("div", { id: 's1t-row', className: 'grid', onMouseEnter: function () { return setIsHovered1(true); }, onMouseLeave: function () { return setIsHovered1(false); } },
                    React.createElement("div", { className: 'left' },
                        React.createElement("p", null, "SpringOne Tour"),
                        React.createElement("h1", null, "01")),
                    React.createElement("div", { className: 'mid' },
                        React.createElement("div", { id: 's1t', className: 'image-container relative overflow-hidden' },
                            !disableVideos && (React.createElement("video", { className: 'absolute top-0 left-0', autoPlay: true, muted: true, loop: true },
                                React.createElement("source", { src: 'movies/springone-tour.mp4', type: "video/mp4" }),
                                "Your browser does not support the video tag.")),
                            React.createElement("img", { src: '/images/springone-tour.png', alt: '', className: 'absolute top-0 left-0 w-full' }))),
                    React.createElement("div", { className: 'right' },
                        React.createElement("p", { className: 'mb-2vw' }, "Year"),
                        React.createElement("h3", null, "-"),
                        React.createElement("p", { className: 'mb-2vw' }, "Role"),
                        React.createElement("h3", null, "Frontend developer"),
                        React.createElement("p", null, "Technologies"),
                        React.createElement("div", { className: 'flex' },
                            React.createElement("h4", { className: 'pill' }, "###"),
                            React.createElement("h4", { className: 'pill' }, "###"),
                            React.createElement("h4", { className: 'pill' }, "###")),
                        React.createElement("p", { className: 'description flex' },
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .2 }, initial: { scaleY: 0 }, animate: !disableAnimations && isHovered1 ? { scaleY: 1 } : {}, className: 'plus inline-block self-start' }, "+"),
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .4 }, initial: { x: -10, opacity: 0 }, animate: !disableAnimations && isHovered1 ? { x: 0, opacity: 1 } : {}, className: 'inline-block' }, "Created a multi-track streaming platform for a virtual conference with chat intergration, a rating system and a sidebar that displays & updates the sessions in real-time according to the user's timezone.")))),
                React.createElement("div", { className: 'grid', onMouseEnter: function () { return setIsHovered2(true); }, onMouseLeave: function () { return setIsHovered2(false); } },
                    React.createElement("div", { className: 'left' },
                        React.createElement("p", null, "The History of Spring"),
                        React.createElement("h1", null, "02"),
                        React.createElement(Link_1["default"], { url: 'https://springone.io/history-of-spring', text: 'Visit site', isCTA: false })),
                    React.createElement("div", { className: 'mid' },
                        React.createElement("div", { id: 'history', className: 'image-container relative overflow-hidden' },
                            React.createElement("img", { src: '/images/history-of-spring.png', alt: '', className: 'absolute top-0 left-0 w-full' }))),
                    React.createElement("div", { className: 'right' },
                        React.createElement("p", { className: 'mb-2vw' }, "Year"),
                        React.createElement("h3", null, "###"),
                        React.createElement("p", { className: 'mb-2vw' }, "Role"),
                        React.createElement("h3", null, "###"),
                        React.createElement("p", null, "Technologies"),
                        React.createElement("div", { className: 'flex' },
                            React.createElement("h4", { className: 'pill' }, "###"),
                            React.createElement("h4", { className: 'pill' }, "###"),
                            React.createElement("h4", { className: 'pill' }, "###")),
                        React.createElement("p", { className: 'description flex' },
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .2 }, initial: { scaleY: 0 }, animate: !disableAnimations && isHovered2 ? { scaleY: 1 } : {}, className: 'plus inline-block self-start' }, "+"),
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .5, ease: [0.075, 0.82, 0.165, 1], delay: .4 }, initial: { x: -10, opacity: 0 }, animate: !disableAnimations && isHovered2 ? { x: 0, opacity: 1 } : {}, className: 'inline-block' }, "lorem ipsum dolor sit amet jamet")))),
                React.createElement("div", { id: 'dev-center-row', className: 'grid', onMouseEnter: function () { return setIsHovered3(true); }, onMouseLeave: function () { return setIsHovered3(false); } },
                    React.createElement("div", { className: 'left' },
                        React.createElement("p", null, "Tanzu Developer Center"),
                        React.createElement("h1", null, "03")),
                    React.createElement("div", { className: 'mid' },
                        React.createElement("div", { id: 'devcenter', className: 'image-container relative overflow-hidden' },
                            !disableVideos && (React.createElement("video", { className: 'absolute top-0 left-0', autoPlay: true, muted: true, loop: true },
                                React.createElement("source", { src: 'movies/tanzu-developer-center-720p.mp4', type: "video/mp4" }),
                                "Your browser does not support the video tag.")),
                            React.createElement("img", { src: '/images/dev-center-home.png', alt: '', className: 'absolute top-0 left-0 w-full' }))),
                    React.createElement("div", { className: 'right' },
                        React.createElement("p", { className: 'mb-2vw' }, "Year"),
                        React.createElement("h3", null, "2021"),
                        React.createElement("p", { className: 'mb-2vw' }, "Role"),
                        React.createElement("h3", null, "Frontend developer + UI/UX designer"),
                        React.createElement("p", null, "Technologies"),
                        React.createElement("div", { className: 'flex' },
                            React.createElement("h4", { className: 'pill' }, "Hugo"),
                            React.createElement("h4", { className: 'pill' }, "Javascript"),
                            React.createElement("h4", { className: 'pill' }, "CSS/SCSS")),
                        React.createElement("p", { className: 'description flex' },
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .2 }, initial: { scaleY: 0 }, animate: !disableAnimations && isHovered3 ? { scaleY: 1 } : {}, className: 'plus inline-block self-start' }, "+"),
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .5, ease: [0.075, 0.82, 0.165, 1], delay: .4 }, initial: { x: -10, opacity: 0 }, animate: !disableAnimations && isHovered3 ? { x: 0, opacity: 1 } : {}, className: 'inline-block' }, "Spearheaded the redesign by introducing animations, refining layouts, adding a dynamic nav bar and implementing tabbable navigation to meet accessibility standards.")))),
                React.createElement("div", { className: 'grid', onMouseEnter: function () { return setIsHovered4(true); }, onMouseLeave: function () { return setIsHovered4(false); } },
                    React.createElement("div", { className: 'left' },
                        React.createElement("p", null, "Spring.io"),
                        React.createElement("h1", null, "04"),
                        React.createElement(Link_1["default"], { url: 'https://spring.io', text: 'Visit site', isCTA: false })),
                    React.createElement("div", { className: 'mid' },
                        React.createElement("div", { id: 'spring', className: 'image-container relative overflow-hidden' },
                            React.createElement("img", { src: '/images/spring.png', alt: '', className: 'absolute top-0 left-0 w-full' }))),
                    React.createElement("div", { className: 'right' },
                        React.createElement("p", { className: 'mb-2vw' }, "Year"),
                        React.createElement("h3", null, "2019"),
                        React.createElement("p", { className: 'mb-2vw' }, "Role"),
                        React.createElement("h3", null, "Frontend developer"),
                        React.createElement("p", null, "Technologies"),
                        React.createElement("div", { className: 'flex' },
                            React.createElement("h4", { className: 'pill' }, "Javascript"),
                            React.createElement("h4", { className: 'pill' }, "CSS/SCSS"),
                            React.createElement("h4", { className: 'pill' }, "HTML")),
                        React.createElement("p", { className: 'description flex' },
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .2 }, initial: { scaleY: 0 }, animate: !disableAnimations && isHovered4 ? { scaleY: 1 } : {}, className: 'plus inline-block self-start' }, "+"),
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .5, ease: [0.075, 0.82, 0.165, 1], delay: .4 }, initial: { x: -10, opacity: 0 }, animate: !disableAnimations && isHovered4 ? { x: 0, opacity: 1 } : {}, className: 'inline-block' }, "Built out the frontend for Spring.io from scratch. Implemented animations to enrich user experience.")))),
                React.createElement("div", { className: 'grid', onMouseEnter: function () { return setIsHovered5(true); }, onMouseLeave: function () { return setIsHovered5(false); } },
                    React.createElement("div", { className: 'left' },
                        React.createElement("p", null, "Who's That Pok\u00E9mon? TCG"),
                        React.createElement("h1", null, "05"),
                        React.createElement(Link_1["default"], { url: 'https://whosthatpokemontcg.com/', text: 'Visit site', isCTA: false })),
                    React.createElement("div", { className: 'mid' },
                        React.createElement("div", { id: 'pokemon', className: 'image-container relative overflow-hidden' },
                            React.createElement("div", { className: 'moving-background absolute top-0 left-0 w-full' }),
                            React.createElement("img", { src: '/images/pokemon-bg-less.png', alt: '', className: 'absolute top-0 left-0 w-full' }))),
                    React.createElement("div", { className: 'right' },
                        React.createElement("p", { className: 'mb-2vw' }, "Year"),
                        React.createElement("h3", null, "2024"),
                        React.createElement("p", { className: 'mb-2vw' }, "Role"),
                        React.createElement("h3", null, "Game developer + UI/UX designer"),
                        React.createElement("p", null, "Technologies"),
                        React.createElement("div", { className: 'flex' },
                            React.createElement("h4", { className: 'pill' }, "React"),
                            React.createElement("h4", { className: 'pill' }, "Framer"),
                            React.createElement("h4", { className: 'pill' }, "Tailwind"),
                            React.createElement("h4", { className: 'pill' }, "API")),
                        React.createElement("p", { className: 'description flex' },
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .2, ease: [0.075, 0.82, 0.165, 1], delay: .2 }, initial: { scaleY: 0 }, animate: !disableAnimations && isHovered5 ? { scaleY: 1 } : {}, className: 'plus inline-block self-start' }, "+"),
                            React.createElement(framer_motion_1.motion.span, { transition: { duration: .5, ease: [0.075, 0.82, 0.165, 1], delay: .4 }, initial: { x: -10, opacity: 0 }, animate: !disableAnimations && isHovered5 ? { x: 0, opacity: 1 } : {}, className: 'inline-block' }, "Produced a React-based web game that fetches a random Pok\u00E9mon card using the Pok\u00E9mon TCG API and prompts the user to guess the name of the character."))))))));
};
// SELECTED WORK END
exports["default"] = SelectedWorks;
